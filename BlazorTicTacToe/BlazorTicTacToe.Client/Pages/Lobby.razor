@page "/"
@using static System.Net.WebRequestMethods
@inject NavigationManager Navigator;
@inject HttpClient Http;
@rendermode @(new InteractiveWebAssemblyRenderMode(false))

<h2 style="text-align: center; font-family: 'Arial', sans-serif; color: #333;">
    <strong>X O X</strong> Oyununa Hoş Geldin!
</h2>

@if (currentRoom == null)
{
    <div style="max-width: 400px; margin: 0 auto; text-align: center;">
        <input @bind="playerName"
               placeholder="İsminiz"
               style="width: 100%; padding: 10px; margin-bottom: 10px; border-radius: 5px; border: 1px solid #ccc;" />

        <input @bind="currentRoomName"
               placeholder="Oda ismi"
               style="width: 100%; padding: 10px; margin-bottom: 10px; border-radius: 5px; border: 1px solid #ccc;" />

        <button @onclick="CreateRoom"
                style="width: 100%; padding: 10px; background-color: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer;">
            Oda Oluştur
        </button>

        <h3 style="margin-top: 20px; color: #333;">Odalar</h3>

        <ul style="list-style: none; padding: 0;">
            @foreach (var room in rooms)
            {
                <li style="margin-bottom: 10px; padding: 10px; border: 1px solid #ddd; border-radius: 5px; background-color: #f9f9f9; display: flex; align-items: center; justify-content: space-between;">
                    <span style="font-weight: bold;">@room.RoomName</span>
                    <button @onclick="() => JoinRoom(room.RoomId)"
                            style="background-color: #28a745; color: white; border: none; border-radius: 5px; padding: 5px 10px; cursor: pointer;">
                        Katıl
                    </button>
                </li>
            }
        </ul>
    </div>

    <div class="text-center">
        <InputFile OnChange="OnFileSelected" />
        <button onclick="@SingleUpload"
                style="background-color: #28a745; color: white; border: none; border-radius: 5px; padding: 5px 10px; cursor: pointer;">
            Dosyayı Yükle
        </button>

        <h3>@UploadMessage</h3>
    </div>
}
else
{
    <CascadingValue Value="hubConnection">
        <Room CurrentRoom="currentRoom" />
    </CascadingValue>
}


@code {
    private HubConnection? hubConnection;
    private string playerName = string.Empty;
    private string currentRoomName = string.Empty;
    private GameRoom? currentRoom;
    private List<GameRoom> rooms = new();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigator.ToAbsoluteUri("/gamehub"))
            .Build();

        hubConnection.On<List<GameRoom>>("Rooms", (roomList) =>
        {
            Console.WriteLine($"Odalar bulundu. Oda sayısı: {roomList.Count}");
            rooms = roomList;
            StateHasChanged();
        }
        );

        await hubConnection.StartAsync();
    }

    private async Task CreateRoom()
    {
        if (hubConnection is null || hubConnection.State != HubConnectionState.Connected)
        {
            return; 
        }

        currentRoom = await hubConnection.InvokeAsync<GameRoom>("CreateRoom",
            currentRoomName,
            playerName);
    }

    private async Task JoinRoom(string roomId)
    {
        if (hubConnection is null)
        {
            return;
        }

        var joinedRoom = await hubConnection.InvokeAsync<GameRoom>("JoinRoom", 
            roomId, 
            playerName);

        if (joinedRoom is not null)
        {
            currentRoom = joinedRoom;
        }
        else
        {
            Console.WriteLine("Oda bulunamadı ya da dolu!");
        }
    }


    //
    // FILE UPLOAD FUNCTIONALITY
    //

    private IBrowserFile selectedFile;
    private string UploadMessage;

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    private async Task SingleUpload()
    {
        if (selectedFile is null)
        {
            UploadMessage = "Henüz dosya seçilmedi.";
            return;
        }

        MemoryStream memoryStream = new();
        await selectedFile.OpenReadStream().CopyToAsync(memoryStream);
        var bytes = memoryStream.ToArray();

        var content = new MultipartFormDataContent();
        content.Add(new ByteArrayContent(bytes), "file", selectedFile.Name);

        var response = await Http.PostAsync("api/files/upload", content);

        if (response.IsSuccessStatusCode)
        {
            UploadMessage = "Dosya başarıyla yüklendi.";
        }
        else
        {
            Console.WriteLine("Dosya yüklenirken hata oluştu.");
        }
    }
}
